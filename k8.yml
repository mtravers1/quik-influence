apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: quikinfluence-ingress
  namespace: quikinfluence-dev
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/subnets: subnet-0a667dde3aa1c35ec, subnet-0eed7e6d2a2a13285, subnet-09552e105a5b68066
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:984575983798:certificate/78a753c8-413e-4f85-8f0b-855413c493ea
spec:
  rules:
    - host: dev.quikinfluence.com
      http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: quikinfluence-frontend
              servicePort: 3000
    - host: api.dev.quikinfluence.com
      http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: quikinfluence-backend
              servicePort: 5002
---

apiVersion: v1
kind: Service
metadata:
  name: quikinfluence-frontend
  namespace: quikinfluence-dev
  labels:
    app: quikinfluence-frontend
spec:
  type: NodePort
  selector:
    app: quikinfluence-frontend
  ports:
    - port: 3000
      targetPort: frontend-port

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: quikinfluence-frontend
  namespace: quikinfluence-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quikinfluence-frontend
  template:
    metadata:
      labels:
        app: quikinfluence-frontend
    spec:
      containers:
        - name: quikinfluence-frontend
          imagePullPolicy: Always
          image: AWS_ECR_URI
          envFrom:
          ports:
            - containerPort: 3000
              name: frontend-port
